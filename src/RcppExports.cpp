// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// gs2gw
NumericVector gs2gw(NumericVector x, double a, double b);
RcppExport SEXP _sportr_gs2gw(SEXP xSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(gs2gw(x, a, b));
    return rcpp_result_gen;
END_RCPP
}
// SimGrowth_Climate
NumericVector SimGrowth_Climate(DataFrame DF, double cmdMin, double cmdMax, double tempMin, double tempMax, double climLoss);
RcppExport SEXP _sportr_SimGrowth_Climate(SEXP DFSEXP, SEXP cmdMinSEXP, SEXP cmdMaxSEXP, SEXP tempMinSEXP, SEXP tempMaxSEXP, SEXP climLossSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type DF(DFSEXP);
    Rcpp::traits::input_parameter< double >::type cmdMin(cmdMinSEXP);
    Rcpp::traits::input_parameter< double >::type cmdMax(cmdMaxSEXP);
    Rcpp::traits::input_parameter< double >::type tempMin(tempMinSEXP);
    Rcpp::traits::input_parameter< double >::type tempMax(tempMaxSEXP);
    Rcpp::traits::input_parameter< double >::type climLoss(climLossSEXP);
    rcpp_result_gen = Rcpp::wrap(SimGrowth_Climate(DF, cmdMin, cmdMax, tempMin, tempMax, climLoss));
    return rcpp_result_gen;
END_RCPP
}
// SimGrowth_Regular
NumericVector SimGrowth_Regular(DataFrame DF);
RcppExport SEXP _sportr_SimGrowth_Regular(SEXP DFSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type DF(DFSEXP);
    rcpp_result_gen = Rcpp::wrap(SimGrowth_Regular(DF));
    return rcpp_result_gen;
END_RCPP
}
// simGrowthCpp
NumericVector simGrowthCpp(DataFrame DF);
RcppExport SEXP _sportr_simGrowthCpp(SEXP DFSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type DF(DFSEXP);
    rcpp_result_gen = Rcpp::wrap(simGrowthCpp(DF));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sportr_gs2gw", (DL_FUNC) &_sportr_gs2gw, 3},
    {"_sportr_SimGrowth_Climate", (DL_FUNC) &_sportr_SimGrowth_Climate, 6},
    {"_sportr_SimGrowth_Regular", (DL_FUNC) &_sportr_SimGrowth_Regular, 1},
    {"_sportr_simGrowthCpp", (DL_FUNC) &_sportr_simGrowthCpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_sportr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
