---
title: "Species Portfolio (R)"
author: "Kiri Daust, Will MacKenzie"
subtitle: "Application of Modern Portfolio Theory to CCISS"
execute:
  echo: false
  warning: false
  error: false
  cache: false
format: html
editor: visual
---

```{r setup}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, cache.lazy = FALSE)
library(data.table)
library(climr)
library(ccissdev)
library(sportr)
library(pool)
library(foreach)
library(scales)
library(nloptr)
library(dplyr)
library(magrittr)
library(ggplot2)
library(ggthemes)
library(ranger)
library(corrplot)
library(RColorBrewer)
require(labdsv)
require(tidyverse)
require(gt)
require(janitor)
source("optimisation.R")
source("portfolio_fns.R")
source("corstars.R")
source("pairwise_corr.R")
# 
```

## Create covariance matrix

```{r input data}
req_trees <- c("Ac", "At", "Ba", "Bg", "Bl", "Cw", "Dr", "Ep", "Fd", 
 "Hm", "Hw", "Lw", "Pl", "Pw", "Py", "Sb", "Ss", "Sx", "Yc")


feas <- fread("../CCISS_ShinyApp/data-raw/data_tables/Feasibility_v12_15.csv")
#feas <- fread("F:\\OneDrive - Personal\\OneDrive\\WNA_BGC\\Feasibility_v12_15_DVM.csv")
sigma_feas <- pairwise_corr(feas, req_trees = req_trees)
#feas <- fread("D:\\CommonTables\\TreeFeasibility\\Feasibility_v12_13_w_OHR.csv")
feas <- fread("F:\\OneDrive - Personal\\OneDrive\\WNA_BGC\\Feasibility_v12_15_DVM.csv")
# sigma_feas <- pairwise_corr(feas, req_trees = req_trees)

#  sigma_feas2 <- make_covmat(feas, req_trees)
sibec <-  ccissdev::SIBEC

BGCmodel <- readRDS("../Build_WNA_BGC_model/WNA_BGCv12_10May24.rds")

```


```{r}

#| fig-cap: "Kendall's correlation between species feasibility ranks"
#| out-width: "90%"
sigma_feas <- fread("Feasibility_CovMat.csv") %>% as.matrix(rownames = "V1")
#M <-cor(sigma_feas)
p.mat = cor.mtest(sigma_feas, conf.level = 0.95)
corrplot(sigma_feas, method = 'square', type="lower", order="alpha", diag = FALSE,tl.col="black", tl.srt=45,  col=brewer.pal(n=8, name="RdYlBu"))#,p.mat = p.mat, sig.level = 0.05)

# corrplot.mixed(sigma_feas2, lower = 'number', upper = 'square', order="alpha" , 
#                tl.col="black", tl.srt=45, number.cex = 12/ncol(sigma_feas))#, p.mat = p.mat, sig.level = 0.1)#, col=brewer.pal(n=5, name="RdYlBu"))
#corstars(sigma_feas[,1:7], method = "pearson", result="html")

```

## Specify Parameters

```{r choose a locations}

current_unit <- "SBSdw3/01" ##should lookup on map so this is automatic
location <- data.table(lat =  53.8,	lon = -123.1, elev =	700, id = 1)
# current_unit <- "IDFdk3/01"
# location <- data.table(lat =  51.3,	lon = -121.4, elev =	1085, id = 1)
# current_unit <- "SBSmc2/01" ##should lookup on map so this is automatic
# location <- data.table(lat =  54.62,	lon = -126.75, elev =	900, id = 1)

 eda <- "C4"

##mean loss parameters for feasibility (in percentages per year)
feas_prob <- data.table(Feas = c(1,2,3,4), PropLoss = c(0.1,0.5,2,5), "NoMort" = c(95,85,60,40))
#feas_prob <- data.table(Feas = c(1,2,3,4), PropLoss = c(0.1,0.1, 0.1, 0.1), "NoMort" = c(95,95, 95,95))
##currently not using this but likely will
#change_prob <- data.table(FeasDiff = c(-3,-2,-1,0,1,2,3), PropLoss = c(0,0,0,0,1,1,1))

tree_ls <- c("Fd","Pl","Sx","At","Bl","Cw","Hw","Py","Ep","Pw", "Lw", "Ac", "Bg") ##what species to include
tre_ls = req_trees
boundDat <- data.table(Spp = tree_ls) ##set bound on species - no bounds by default
boundDat[,`:=`(minWt = 0, maxWt = 1)]

```

## Get climate data for sites

```{r get climate data}
##| cache: true
clim_dat <- get_clim(location) ##yearly climate data
clim_periods <- get_clim_periods(location)
clim_history <- get_clim_history(location)
BGCmodel <- readRDS("D:\\GitHub\\Build_WNA_BGC_model\\WNA_BGCv12_10May24.rds")
vars.selected <- BGCmodel$variable.importance %>% as.data.frame() %>% rownames_to_column("var") %>% select(var)
vars <- vars.selected$var
clim_dat <- clim_dat %>% dplyr::select(id, GCM, SSP, RUN, PERIOD, DD5, all_of(vars))
clim_dat[,run_id := interaction(id,GCM,SSP,RUN)]

# fwrite(clim_dat, "SBSmc2_site_climate.csv")
# # fwrite(clim_dat, "IDFdk3_site_climate.csv")
# clim_dat <- fread("SBSdw3_site_climate.csv")
```
```{r}
clim_hist <- clim_history %>% mutate(GCM = "Historic") %>% dplyr::select(id, GCM, PERIOD,DD5, all_of(vars))
clim_fut <-  clim_dat %>% filter(!RUN == "ensembleMean") %>%
  dplyr::select(id,  GCM, PERIOD, DD5, all_of(vars)) 
climate <- rbind(clim_hist, clim_fut)
climate[,PERIOD := as.numeric(PERIOD)]
ggplot(climate, aes(x = PERIOD, y = CMD.total, group = GCM, colour= GCM)) +
  geom_line()# +
  #geom_text(aes(label = BGC), size = 4)
```


```{r bgc predictions for portfolio by year}
#clim_dat <- fread("IDFdk3_site_climate.csv")
clim_dat <- fread("SBSdw3_site_climate.csv")
clim_dat <- fread("SBSmc2_site_climate.csv")
clim_dat2 <- clim_dat %>% select(-DD5)
eda = "D6"
bgc_ss <- prep_data(clim_dat, BGCmodel, copy(feas), copy(E1), eda) ##bgc predictions
clim_dat[,run_id := interaction(id,GCM,SSP,RUN)]
temp <- unique(bgc_ss[,.(run_id,PERIOD,BGC)])
```

```{r bgc predictions for portfolio by normal period}
clim_normal <- clim_periods %>% dplyr::select(id, GCM, SSP, RUN, PERIOD, DD5, all_of(vars))
bgc_ss <- prep_data(clim_normal, BGCmodel, copy(feas), copy(E1), eda) ##bgc predictions
clim_normal[,run_id := interaction(id,GCM,SSP,RUN)]
temp <- unique(bgc_ss[,.(run_id,PERIOD,BGC)])
fwrite(temp, "normalperiod_predictedBGC.csv")
```



## Run portfolios

```{r run portfolios}
tree_ls <- c("Fd", "Pl", "Sx", "Py", "Lw", "Hw", "Cw", "Pw", "Bl")#, "At")#"Bg","Hm",,   "Yc","Ac", ,  "At", "Ep")#, #, "Cw", "Hw", "Py", "Pw", "Lw", "At", "Ep", "Ac", "Bg")
feas_prob <- data.table(Feas = c(1,2,3,4), PropLoss = c(0.1,0.5,2,5), "NoMort" = c(95,85,70,50))
#feas_prob <- data.table(Feas = c(1,2,3,4), PropLoss = c(0.1,0.1, 0.1, 0.1), "NoMort" = c(95,95, 95,95))
set.seed(1234)
portfolio1 <- run_portfolio(bgc_ss, sibec, si_default = 7, feas, tree_ls, feas_prob, sigma = NULL)
xx <- plot_ef(portfolio = portfolio1$Portfolio, run_list = portfolio1$run_list, current_unit = current_unit, returnValue = 0.9)
plot(xx)
port1.ratios <- port_ratios(portfolio = portfolio1$Portfolio, run_list = portfolio1$run_list, current_unit = current_unit, returnValue = 0.9) %>% adorn_totals()
gt(port1.ratios)
# portfolio2 <- run_portfolio(bgc_ss, sibec, si_default = 12, feas, tree_ls, feas_prob, sigma = sigma_feas)
# yy <- plot_ef(portfolio = portfolio2$Portfolio, run_list = portfolio2$run_list, current_unit = current_unit, returnValue = 0.9)
# #currently not using this but likely will
# #change_prob <- data.table(FeasDiff = c(-3,-2,-1,0,1,2,3), PropLoss = c(0,0,0,0,1,1,1))
# require(ggpubr)
# ggarrange(xx,yy)
```

```{r run portfolios}
port1.ratios <- port_ratios(portfolio = portfolio1$Portfolio, run_list = portfolio1$run_list, current_unit = current_unit, returnValue = 0.9)
port2.ratios <- port_ratios(portfolio = portfolio2$Portfolio, run_list = portfolio2$run_list, current_unit = current_unit, returnValue = 0.9)


```


### Examine annual BGC projections

```{r example annual BGC predictions}
#| fig-cap: "Annual BGC prediction along selected single climate factors"
#| out-width: "90%"
#load("../Common_Files/BGCModel_Extratrees_Balanced.Rdata") ##load bgc model
##load bgc model
run = "r2i1p1f1"#"ensembleMean"
clim_plot <- clim_dat %>% filter(GCM %in% "ACCESS-ESM1-5", RUN %in% run )
xx <- unique(clim_dat$run_id) %>% as.data.frame
#clim_plot <- clim_plot[run_id == "1.UKESM1-0-LL.ssp245.r1i1p1f2",]
#models <- clim_plot$run_id %>% select(contains)
#clim_plot <- clim_plot[run_id == "1.ACCESS-ESM1-5.ssp245.r10i1p1f1",]

clim_dat[,PERIOD := as.numeric(PERIOD)]
ggplot(clim_plot, aes(x = PERIOD, y = CMD.total, group = RUN, colour = RUN)) +
  geom_line() # +
 # geom_text(aes(label = BGC), size = 4)

ggplot(clim_plot, aes(x = PERIOD, y = PPT_JAS)) +
  geom_line() +
  geom_text(aes(label = BGC), size = 4)

ggplot(clim_plot, aes(x = PERIOD, y = CMD.total)) +
  geom_line() +
  geom_text(aes(label = BGC), size = 4)
```
```{r sibec_by_year}
GCM_run = "1.ACCESS-ESM1-5.ssp245.r10i1p1f1"
tree = "Cw"
sibec <- sibec %>% mutate_if(is.numeric, round, 1)
current_sibec <- sibec %>% filter(SS_NoSpace == current_unit, TreeSpp %in% tree) %>%  mutate(SI = MeanPlotSiteIndex)

 xx <- sibec_by_year(bgc_ss, SIBEC = sibec, si_default = 15, feas, tree_ls, GCM_run = "1.ACCESS-ESM1-5.ssp245.r10i1p1f1") %>% filter(Spp %in% tree)

ggplot(xx, aes(x = Returns.PERIOD, y = Returns.SI, fill = Spp)) +
  geom_line() +
  geom_text(aes(label = Returns.SI), size = 4) +
  geom_hline(yintercept = current_sibec$SI)+
  facet_wrap(~Spp, ncol = 2)

ggplot(xx, aes(x = Returns.PERIOD, y = Returns.Feas, fill = Spp)) +
  geom_line() +
  scale_y_reverse()+
  geom_text(aes(label = Returns.Feas), size = 4) +
  #geom_hline(yintercept = current_sibec$SI)+
  facet_wrap(~Spp, ncol = 2)

```

### Graphic to summarize source of BGC predictions

```{r example annual BGC predictions}
###Summarize the number of BC vs non-BC years
# 
# yy <- clim_plot %>% select(BGC) %>% count(BGC)
# zz <- clim_plot %>% select(PERIOD, BGC) %>% arrange(PERIOD) %>% mutate(bgc = BGC)
# feas2 <- feas %>% filter(spp %in% "Pl")
# zz <- left_join(zz, feas2) %>% filter %>% select(bgc) %>% distinct
```

# Run Portfolio

```{r run portfolio}
##calculate covariance on simulations; set sigma = sigma_feas (calculated above) to use specific covariance matrix
tree_ls <- tree_ls[tree_ls != "Pw"]
portfolio1 <- run_portfolio(bgc_ss, ccissdev::SIBEC, feas, tree_ls, feas_prob, sigma = NULL) ##sigma = NULL 
portfolio2 <- run_portfolio(bgc_ss, ccissdev::SIBEC, feas, tree_ls, feas_prob, sigma = sigma_feas)

returns <- fread("TestPortfolio.csv")
plot(returns$Pl, type = "l")
lines(returns$Sx, type = "l")
lines(returns$At, type = "l")
lines(returns$Lw, type = "l", col = "red")
```


```{r mean returns for all species}
#| fig-cap: "Mean returns for all species in portfolio"
#| out-width: "90%"
# portfolio2 <- portfolio$Simulation# %>% filter(Spp == "Fd")
# ggplot(portfolio2, aes(x = Year, y = Returns, col = Spp, group = interaction(It, Spp))) +
#   geom_line()
# ggplot(portfolio$Simulation, aes(x = Year, y = Returns, col = Spp, group = interaction(It, Spp))) +
#   geom_line()
ggplot(portfolio1$Simulation, aes(x = Year, y = Returns, col = Spp)) +
  geom_smooth(method = "loess")
ggplot(portfolio2$Simulation, aes(x = Year, y = Returns, col = Spp)) +
 geom_smooth(method = "loess")

```

```{r comparisons of estimated returns}
#| fig-cap: "Comparison of estimated range of returns between Fd and Pl"
#| out-width: "90%"
portfolio1.sim <- portfolio1$Simulation %>% filter(Spp %in% tree_ls) %>% group_by(Spp,Year) %>% 
  mutate(min_val = min(Returns), max_val = max(Returns)) %>% ungroup
portfolio2.sim <- portfolio2$Simulation %>% filter(Spp %in% tree_ls) %>% group_by(Spp,Year) %>%
  mutate(min_val = min(Returns), max_val = max(Returns)) %>% ungroup

ggplot(portfolio1.sim) +
  geom_smooth(aes(x = Year, y = Returns, col = Spp))+
  geom_ribbon(aes(x = Year, ymax = max_val, ymin = min_val, col = Spp, fill = Spp), alpha=0.3)
  geom_smooth(aes(x = Year, y = Returns), se = TRUE, color = "red")
# 
  ggplot(portfolio2.sim) +
  geom_smooth(aes(x = Year, y = Returns, col = Spp))+
  geom_ribbon(aes(x = Year, ymax = max_val, ymin = min_val, col = Spp, fill = Spp), alpha=0.3)
  geom_smooth(aes(x = Year, y = Returns), se = TRUE, color = "red")

```



## Plot Efficient Frontier of Portfolio

```{r plotting an efficient frontier}
# | fig-cap: "Modern Portfolio Theory Efficient Frontier"
# | out-width: "90%"
plot_ef(portfolio = portfolio1$Portfolio, run_list = portfolio1$run_list, current_unit = current_unit, returnValue = 0.9)
```


```{r plotting an efficient frontier2}
# | fig-cap: "Modern Portfolio Theory Efficient Frontier Sigma from Feasibility"
# | out-width: "90%"
 plot_ef(portfolio2$Portfolio, run_list = portfolio2$run_list, current_unit = current_unit, returnValue = 0.9)
```

## Comparison of Species Ratio at different Risk levels

Actually turns out boxplots work better here

```{r}
tree.ratio.graph <- function(portfolio){

max_sharpe <- get_portfolio(portfolio_raw = portfolio$Portfolio, run_list = portfolio$run_list, what = "Sharpe")
max_sharpe[,Stat := "2MaxSharpe_Optim"]

spec_ret <- get_portfolio(portfolio_raw = portfolio$Portfolio, run_list = portfolio$run_list, what = "Return", return_value = 0.9)
spec_ret[,Stat := "1Return_0.9Volume"]

min_sd <- get_portfolio(portfolio_raw = portfolio$Portfolio, run_list = portfolio$run_list, what = "MinSd")
min_sd[,Stat := "3Resilience"]

max_sd <- get_portfolio(portfolio_raw = portfolio$Portfolio, run_list = portfolio$run_list, what = "MaxSd")
max_sd[,Stat := "0MaxReturn"]

port_all <- rbind(max_sharpe, spec_ret, min_sd, max_sd)
port_all <- melt(port_all, id.vars = c("SiteNo","Stat"))
num_models = length(unique(port_all$SiteNo))
ggplot(port_all, aes(x = Stat, y = value/num_models, fill = variable)) +
  geom_bar(position = "stack", stat="identity") +
  #facet_wrap(~ Stat) +
  xlab("Portfolio Risk Choice") +
  ylab("Weighting")
}
tree.ratio.graph(portfolio1)
tree.ratio.graph(portfolio2)

```
Violin Plots
This should show the variation in monte carlo simulation return for each portfolio risk choice plus a portfolio of the single best tree species
```{r}


```

```{r}

```

